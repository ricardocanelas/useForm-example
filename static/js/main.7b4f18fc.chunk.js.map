{"version":3,"sources":["Validation.js","useForm.js","App.js","index.js"],"names":["getRuleMessage","rule","defaultMessage","hasOwnProperty","message","getRuleValue","defaultValue","value","validations","required","minLength","length","maxLength","isInvalid","rules","errors","result","undefined","Object","keys","forEach","ruleName","push","useForm","schema","initialValues","onSubmit","useState","state","setState","touched","setTouched","setErrors","setValue","name","prev","values","handleChange","e","target","handleSubmit","preventDefault","temp","map","schemaName","error","filter","item","Boolean","reduce","acc","cur","getErrors","App","firstname","validate","console","log","className","type","onChange","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAMA,EAAiB,SAACC,EAAMC,GAC5B,MAAoB,kBAATD,EACFA,EACkB,kBAATA,GAAqBA,EAAKE,eAAe,WAClDF,EAAKG,QAGPF,GAGHG,EAAe,SAACJ,EAAMK,GAC1B,MAAoB,kBAATL,GAAqC,kBAATA,EAC9BA,EACkB,kBAATA,GAAqBA,EAAKE,eAAe,SAClDF,EAAKM,MAGPD,GAGHE,EAAc,CAClBC,SAAU,SAACF,EAAON,GAChB,MAAiB,KAAVM,GAAeP,EAAeC,EAAM,gCAE7CS,UAAW,SAACH,EAAON,GACjB,QAAOM,EAAMI,OAASN,EAAaJ,EAAM,KACrCD,EAAeC,EAAD,sCAAsCI,EAAaJ,EAAM,GAAzD,kBAGpBW,UAAW,SAACL,EAAON,GACjB,QAAOM,EAAMI,OAASN,EAAaJ,EAAM,KACrCD,EAAeC,EAAD,6CAA6CI,EAAaJ,EAAM,GAAhE,mBAKTY,EAAY,SAACC,EAAOP,GAC/B,IAAMQ,EAAS,GACXC,OAASC,EAiBb,OAfAC,OAAOC,KAAKL,GAAOM,SAAQ,SAACC,GAC1B,IAAMpB,EAAOa,EAAMO,GACC,oBAATpB,GAEM,KADfe,EAASf,EAAKM,KAC4B,kBAAXS,GAC7BD,EAAOO,KAAKN,GAELR,EAAYL,eAAe,CAACkB,OAEtB,KADfL,EAASR,EAAYa,GAAUd,EAAON,KACI,kBAAXe,GAC7BD,EAAOO,KAAKN,OAKXD,EAAOJ,OAASI,EAAO,QAAKE,GCiBtBM,EArEC,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAAe,EAC7BC,mBAASF,GAAiB,IADG,mBAChDG,EADgD,KACzCC,EADyC,OAEzBF,mBAAS,IAFgB,mBAEhDG,EAFgD,KAEvCC,EAFuC,OAG3BJ,mBAAS,IAHkB,mBAGhDZ,EAHgD,KAGxCiB,EAHwC,KAKjDC,EAAW,SAACC,EAAM3B,GACtBwB,GAAW,SAACI,GAAD,mBAAC,eACPA,GADM,kBAERD,GAAO,OAEVL,GAAS,SAACM,GAAD,mBAAC,eACLA,GADI,kBAEND,EAAO3B,OAEVyB,GAAU,SAACG,GAAD,mBAAC,eACNA,GADK,kBAEPD,EAAOrB,EAAUW,EAAOU,GAAO3B,SA2CpC,MAAO,CACL6B,OAAQR,EACRb,SACAe,UACAG,WACAI,aAlBmB,SAACC,GACpB,IAAMJ,EAAOI,EAAEC,OAAOL,KAChB3B,EAAQ+B,EAAEC,OAAOhC,MACvB0B,EAASC,EAAM3B,IAgBfiC,aAbmB,SAACF,GACpBA,EAAEG,iBACyB,IAlCX,WAChB,IAAMC,EAAOxB,OAAOC,KAAKK,GACtBmB,KAAI,SAACC,GACJ,MAAO,CAAEV,KAAMU,EAAYC,MAAOhC,EAAUW,EAAOoB,GAAahB,EAAMgB,QAEvEE,QAAO,SAACC,GAAD,OAAUC,QAAQD,EAAKF,UAkBjC,OAhBIH,EAAK/B,SACPqB,EACEU,EAAKO,QAAO,SAACC,EAAKC,GAEhB,OADAD,EAAIC,EAAIjB,MAAQiB,EAAIN,MACbK,IACN,KAELnB,GAAW,SAACI,GAAD,mBAAC,eACPA,GACAO,EAAKO,QAAO,SAACC,EAAKC,GAEnB,OADAD,EAAIC,EAAIjB,OAAQ,EACTgB,IACN,SAIAR,EAWHU,GAAYzC,QACde,EAASY,MCTAe,MA/Cf,WAAgB,IAAD,EACmD9B,EAAQ,CACtEE,cAAe,CACb6B,UAAW,IAEb9B,OAAQ,CACN8B,UAAW,CACT7C,SAAU,mDACVG,UAAW,GACX2C,SAAU,SAAChD,GACT,QAAOA,EAAMI,QAAU,IAAI,8CAIjCe,SAAU,WACR8B,QAAQC,IAAI,8BAA+B,CAAErB,cAdzCA,EADK,EACLA,OAAQrB,EADH,EACGA,OAAQe,EADX,EACWA,QAASO,EADpB,EACoBA,aAAcG,EADlC,EACkCA,aAkB/C,OACE,qCACE,uBAAMd,SAAUc,EAAhB,UACE,sBAAKkB,UAAU,gBAAf,UACE,gDACA,uBAAOC,KAAK,OAAOzB,KAAK,YAAY3B,MAAO6B,EAAOkB,UAAWM,SAAUvB,IACtEtB,EAAOuC,WAAaxB,EAAQwB,WAAa,sBAAMI,UAAU,UAAhB,SAA2B3C,EAAOuC,eAE9E,wBAAQK,KAAK,SAAb,uBAEF,sBAAKD,UAAU,QAAf,UACE,gCACE,2CACA,8BAAMG,KAAKC,UAAU/C,EAAQ,KAAM,QAErC,gCACE,4CACA,8BAAM8C,KAAKC,UAAUhC,EAAS,KAAM,QAEtC,gCACE,2CACA,8BAAM+B,KAAKC,UAAU1B,EAAQ,KAAM,eCrC7C2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7b4f18fc.chunk.js","sourcesContent":["const getRuleMessage = (rule, defaultMessage) => {\n  if (typeof rule === 'string') {\n    return rule\n  } else if (typeof rule === 'object' && rule.hasOwnProperty('message')) {\n    return rule.message\n  }\n\n  return defaultMessage\n}\n\nconst getRuleValue = (rule, defaultValue) => {\n  if (typeof rule === 'string' || typeof rule === 'number') {\n    return rule\n  } else if (typeof rule === 'object' && rule.hasOwnProperty('value')) {\n    return rule.value\n  }\n\n  return defaultValue\n}\n\nconst validations = {\n  required: (value, rule) => {\n    return value === '' ? getRuleMessage(rule, 'The field field is required') : true\n  },\n  minLength: (value, rule) => {\n    return value.length < getRuleValue(rule, 1)\n      ? getRuleMessage(rule, `This field must be at least ${getRuleValue(rule, 1)} characters.`)\n      : true\n  },\n  maxLength: (value, rule) => {\n    return value.length > getRuleValue(rule, 1)\n      ? getRuleMessage(rule, `This field may not be greater than ${getRuleValue(rule, 1)} characters.`)\n      : true\n  },\n}\n\nexport const isInvalid = (rules, value) => {\n  const errors = []\n  let result = undefined\n\n  Object.keys(rules).forEach((ruleName) => {\n    const rule = rules[ruleName]\n    if (typeof rule === 'function') {\n      result = rule(value)\n      if (result === false || typeof result === 'string') {\n        errors.push(result)\n      }\n    } else if (validations.hasOwnProperty([ruleName])) {\n      result = validations[ruleName](value, rule)\n      if (result === false || typeof result === 'string') {\n        errors.push(result)\n      }\n    }\n  })\n\n  return errors.length ? errors[0] : undefined\n}\n","import { useState } from 'react'\nimport { isInvalid } from './Validation'\n\nconst useForm = ({ schema, initialValues, onSubmit }) => {\n  const [state, setState] = useState(initialValues || {})\n  const [touched, setTouched] = useState({})\n  const [errors, setErrors] = useState({})\n\n  const setValue = (name, value) => {\n    setTouched((prev) => ({\n      ...prev,\n      [name]: true,\n    }))\n    setState((prev) => ({\n      ...prev,\n      [name]: value,\n    }))\n    setErrors((prev) => ({\n      ...prev,\n      [name]: isInvalid(schema[name], value),\n    }))\n  }\n\n  const getErrors = () => {\n    const temp = Object.keys(schema)\n      .map((schemaName) => {\n        return { name: schemaName, error: isInvalid(schema[schemaName], state[schemaName]) }\n      })\n      .filter((item) => Boolean(item.error))\n\n    if (temp.length) {\n      setErrors(\n        temp.reduce((acc, cur) => {\n          acc[cur.name] = cur.error\n          return acc\n        }, {})\n      )\n      setTouched((prev) => ({\n        ...prev,\n        ...temp.reduce((acc, cur) => {\n          acc[cur.name] = true\n          return acc\n        }, {}),\n      }))\n    }\n\n    return temp\n  }\n\n  const handleChange = (e) => {\n    const name = e.target.name\n    const value = e.target.value\n    setValue(name, value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (getErrors().length === 0) {\n      onSubmit(e)\n    }\n  }\n\n  return {\n    values: state,\n    errors,\n    touched,\n    setValue,\n    handleChange,\n    handleSubmit,\n  }\n}\n\nexport default useForm\n","import useForm from './useForm'\n\nfunction App() {\n  const { values, errors, touched, handleChange, handleSubmit } = useForm({\n    initialValues: {\n      firstname: '',\n    },\n    schema: {\n      firstname: {\n        required: 'This is a custom message. This field is required',\n        maxLength: 10,\n        validate: (value) => {\n          return value.length <= 4 ? 'The field must be at least 5 characters.' : true\n        },\n      },\n    },\n    onSubmit: () => {\n      console.log('Ready to send to backend...', { values })\n    },\n  })\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className=\"flex flex-col\">\n          <label>First Name:</label>\n          <input type=\"text\" name=\"firstname\" value={values.firstname} onChange={handleChange} />\n          {errors.firstname && touched.firstname && <span className=\"invalid\">{errors.firstname}</span>}\n        </div>\n        <button type=\"submit\">submit</button>\n      </form>\n      <div className=\"debug\">\n        <div>\n          <span>Errors:</span>\n          <pre>{JSON.stringify(errors, null, 2)}</pre>\n        </div>\n        <div>\n          <span>Touched:</span>\n          <pre>{JSON.stringify(touched, null, 2)}</pre>\n        </div>\n        <div>\n          <span>Values:</span>\n          <pre>{JSON.stringify(values, null, 2)}</pre>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}